@model FoodieSydney.Model.Comment
@using FoodieSydney.Controller
@{
    var commentModel = Model;

    commentModel.CommentName = commentModel.GetNewCommentName();
    commentModel.ContentId = commentModel.Content.Id;
    commentModel.ParentContentId = commentModel.Content.Parent != null ? commentModel.Content.Parent.Id : 0;
    commentModel.ParentContentGuidId = commentModel.Content.Parent != null ? commentModel.Content.Parent.Key : new Guid();
}
@using (Html.BeginForm("NewComment", "Page", FormMethod.Post))
{
    <div>
        <div class="inputCommentor">
            @Html.LabelFor(m => m.CommentorName, new { @class = "commentLabel" })
            <br />
            @Html.TextBoxFor(m => m.CommentorName)
            @Html.ValidationMessageFor(model => model.CommentorName)
        </div>
        <div class="inputCommentContent">
            @Html.LabelFor(m => m.CommentContent, new { @class = "commentLabel" })
            <br />
            @Html.TextAreaFor(m => m.CommentContent, new { @class = "commentContentBox" })
            @Html.ValidationMessageFor(model => model.CommentContent)
        </div>
        <div class="commentSubmit">
            <input class="" type="submit" value="Submit">
        </div>

        @Html.HiddenFor(m => m.ContentId, commentModel.ContentId)
        @Html.HiddenFor(m => m.CommentName, commentModel.CommentName)
        @Html.HiddenFor(m => m.ParentContentGuidId, commentModel.ParentContentGuidId)
    </div>
}
@* 
@using (Html.BeginUmbracoForm<PageController>(nameof(PageController.NewCommentAsync), FormMethod.Post))
{   
    @Html.AntiForgeryToken()
    <div>
        <div class="inputCommentor">
            @Html.LabelFor(m => m.CommentorName, new { @class = "commentLabel" })
            <br />
            @Html.TextBoxFor(m => m.CommentorName)
            @Html.ValidationMessageFor(model => model.CommentorName)
        </div>
        <div class="inputCommentContent">
            @Html.LabelFor(m => m.CommentContent, new { @class = "commentLabel" })
            <br />
            @Html.TextAreaFor(m => m.CommentContent, new { @class = "commentContentBox" })
            @Html.ValidationMessageFor(model => model.CommentContent)
        </div>
        <div class="commentSubmit">
            <input class="" type="submit" value="Submit">
        </div>

        @Html.HiddenFor(m => m.ContentId, commentModel.ContentId)
        @Html.HiddenFor(m => m.CommentName, commentModel.CommentName)
        @Html.HiddenFor(m => m.ParentContentGuidId, commentModel.ParentContentGuidId)
    </div>
}
 *@